# ONE
http.get./schema/batchprocess/{id}:
  summary: Fetch BatchProcess
  description: Fetch BatchProcess from database
  fn: com.biz.schema.batchprocess.one
  params:
    - name: id
      in: path
      required: true
      schema:
        type: string
  responses:
    '200':
      content:
        application/json:
          schema:
            type: object

# CREATE
http.post./schema/batchprocess:
  summary: Create a new BatchProcess
  description: Create BatchProcess from database
  fn: com.biz.schema.batchprocess.create
  body:
    content:
      application/json:
        schema:
          $ref: '#/definitions/schema/BatchProcess'
  responses:
    '201':
      content:
        application/json:
          schema:
            type: object

# UPDATE
http.put./schema/batchprocess/{id}:
  summary: Update a BatchProcess
  description: Update BatchProcess from database
  fn: com.biz.schema.batchprocess.update
  body:
    content:
      application/json:
        schema:
          $ref: '#/definitions/schema/BatchProcess'
  params:
    - name: id
      in: path
      required: true
      schema:
        type: string
  responses:
    '204':
      content:
        application/json:
          schema:
            type: object

# DELETE
http.delete./schema/batchprocess/{id}:
  summary: Delete a BatchProcess
  description: Delete BatchProcess from database
  fn: com.biz.schema.batchprocess.delete
  params:
    - name: id
      in: path
      required: true
      schema:
        type: string
  responses:
    '202':
      content:
        application/json:
          schema:
            type: object

# SEARCH
http.post./schema/batchprocess/search:
  summary: Fetch multiple BatchProcess
  description: Fetch multiple BatchProcess from database
  fn: com.biz.schema.batchprocess.search
  body:
    content:
      application/json:
        schema:
          type: object
  responses:
    '200':
      content:
        application/json:
          schema:
            type: array

